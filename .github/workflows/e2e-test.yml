name: Manual workflow

on:
  push:
  workflow_dispatch:

env: 
  TEST_REPOSITORY: org-workflow-test-organization 
jobs:
  create-repository:
    runs-on: ubuntu-latest
    steps:
      - name: generate random repository name and content
        id: random
        run: |
          echo ::set-output name=repo::$(openssl rand -hex 3)
          echo ::set-output name=content::$(echo -n 'test commit' | openssl base64)
      - name: create repository
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.CI_TEST_TOKEN }}
          script: |
            github.repos.createInOrg({
              org: "${{ env.TEST_REPOSITORY }}",
              name: "${{ steps.random.outputs.repo }}"
            });
      - name: push random contents
        id: push-content
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.CI_TEST_TOKEN }}
          script: |
            const result = await github.repos.createOrUpdateFileContents({
              owner: "${{ env.TEST_REPOSITORY }}",
              repo: "${{ steps.random.outputs.repo }}",
              path: "test-file.md",
              message: "Test commit for https://github.com/SvanBoxel/organization-workflows",
              content: "${{ steps.random.outputs.content }}",
              commiter: {
                name: "github-actions[bot]",
                email: "github-actions[bot]@users.noreply.github.com"
              }
            });
            
            core.setOutput('ref', result.data.commit.sha);
      - name: Sleep for 15 seconds
        run: sleep 15s
      - name: check whether check is triggered
        uses: actions/github-script@v3
        with: 
          script: |
            const result = await github.checks.listForRef({
                owner: "${{ env.TEST_REPOSITORY }}",
                repo: "${{ steps.random.outputs.repo }}",
                ref: "${{ steps.push-content.outputs.ref }}"
            });

            if(!result.data.check_runs.some(check => check.app.id === 93678)) {
              core.setFailed("central workflow wasn't triggered");
            }
      - name: delete repository
        if: always()
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.CI_TEST_TOKEN }}
          script: |
            github.repos.delete({
              owner: "${{ env.TEST_REPOSITORY }}",
              repo: "${{ steps.random.outputs.repo }}"
            });
